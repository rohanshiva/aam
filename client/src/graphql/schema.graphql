"""
Represents non-fractional signed whole numeric values. Since the value may
exceed the size of a 32-bit integer, it's encoded as a string.
"""
scalar BigInt

"""
Autogenerated input type of CreateRelease
"""
input CreateReleaseInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  release: ReleaseInputType!
}

"""
Autogenerated return type of CreateRelease.
"""
type CreateReleasePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  release: ReleaseType
}

enum CurrencyEnum {
  AED
  AFN
  ALL
  AMD
  ANG
  AOA
  ARS
  AUD
  AWG
  AZN
  BAM
  BBD
  BCH
  BDT
  BGN
  BHD
  BIF
  BMD
  BND
  BOB
  BRL
  BSD
  BTC
  BTN
  BWP
  BYN
  BYR
  BZD
  CAD
  CDF
  CHF
  CLF
  CLP
  CNH
  CNY
  COP
  CRC
  CUC
  CUP
  CVE
  CZK
  DJF
  DKK
  DOP
  DZD
  EEK
  EGP
  ERN
  ETB
  EUR
  FJD
  FKP
  GBP
  GBX
  GEL
  GGP
  GHS
  GIP
  GMD
  GNF
  GTQ
  GYD
  HKD
  HNL
  HRK
  HTG
  HUF
  IDR
  ILS
  IMP
  INR
  IQD
  IRR
  ISK
  JEP
  JMD
  JOD
  JPY
  KES
  KGS
  KHR
  KMF
  KPW
  KRW
  KWD
  KYD
  KZT
  LAK
  LBP
  LKR
  LRD
  LSL
  LTL
  LVL
  LYD
  MAD
  MDL
  MGA
  MKD
  MMK
  MNT
  MOP
  MRO
  MRU
  MTL
  MUR
  MVR
  MWK
  MXN
  MYR
  MZN
  NAD
  NGN
  NIO
  NOK
  NPR
  NZD
  OMR
  PAB
  PEN
  PGK
  PHP
  PKR
  PLN
  PYG
  QAR
  RON
  RSD
  RUB
  RWF
  SAR
  SBD
  SCR
  SDG
  SEK
  SGD
  SHP
  SKK
  SLE
  SLL
  SOS
  SRD
  SSP
  STD
  STN
  SVC
  SYP
  SZL
  THB
  TJS
  TMM
  TMT
  TND
  TOP
  TRY
  TTD
  TWD
  TZS
  UAH
  UGX
  USD
  USDC
  UYU
  UZS
  VEF
  VES
  VND
  VUV
  WST
  XAF
  XAG
  XAU
  XBA
  XBB
  XBC
  XBD
  XCD
  XDR
  XFU
  XOF
  XPD
  XPF
  XPT
  XTS
  YER
  ZAR
  ZMK
  ZMW
  ZWD
  ZWL
  ZWN
  ZWR
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Mutation {
  createRelease(
    """
    Parameters for CreateRelease
    """
    input: CreateReleaseInput!
  ): CreateReleasePayload
  upsertProduct(
    """
    Parameters for UpsertProduct
    """
    input: UpsertProductInput!
  ): UpsertProductPayload
}

input ProductInputType {
  coverImgUrl: String
  currency: CurrencyEnum
  description: String
  id: ID
  name: String
  price: BigInt
  sellerId: ID
  themeColor: String
  thumbnailImgUrl: String
}

type ProductType {
  coverImgUrl: String
  currency: CurrencyEnum!
  description: String
  id: ID!
  name: String!
  prettyLatestRelease: String!
  prettyPrice: String!

  """
  BigInt will be coerced to a string for this field to accommodate large numbers
  """
  price: BigInt!
  releases: [ReleaseType!]!
  seller: Seller!
  themeColor: String
  thumbnailImgUrl: String
}

type Query {
  product(id: ID): ProductType
  products(currency: CurrencyEnum, description: String, id: ID, name: String, price: BigInt, sellerId: ID): [ProductType!]!
  releases(productId: ID, sellerId: ID): [ReleaseType!]!
  seller(email: String, id: ID): Seller
}

input ReleaseInputType {
  id: ID
  name: String
  notes: String
  productId: ID
  releaseDate: ISO8601Date
  sellerId: ID
}

type ReleaseType {
  id: ID!
  name: String!
  notes: String
  prettyReleaseDate: String!
  product: ProductType!
  releaseDate: ISO8601Date!
  seller: Seller!
}

type Seller {
  avatarUrl: String
  email: String!
  id: ID!
  name: String!
}

"""
Autogenerated input type of UpsertProduct
"""
input UpsertProductInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID
  product: ProductInputType!
}

"""
Autogenerated return type of UpsertProduct.
"""
type UpsertProductPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  product: ProductType
}
